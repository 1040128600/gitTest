<?xml version="1.0" encoding="UTF-8" ?> 
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-Mapper.dtd"> 
<mapper namespace="dao.BicycleStationDao">
 <cache
eviction="FIFO"
flushInterval="60000"
size="512"
readOnly="true"/>

    <insert id="addOneStation" parameterType="model.Bicycle_station" >
         <selectKey keyProperty="station_Id" resultType="int" order="BEFORE">
			select station_SEQ.NEXTVAL from dual
		</selectKey>
	
		insert into Bicycle_station values(
			#{station_Id},
			#{station_Code},
			#{station_Name},
			#{longitude},
			#{latitude},
			#{bicycle_Pile_Num},
			#{address},
			#{person_In_Charge},
			#{build_Time},
			#{run_Time},
			#{user_Id},
			#{create_Time},
			#{zxbj},
			#{remark}
		)
    </insert>
    <update id="updateOneStation">
        update Bicycle_station set
			station_Name=#{station_Name},
			longitude=#{longitude},
			latitude=#{latitude},
			bicycle_Pile_Num=#{bicycle_Pile_Num},
			address=#{address},
			person_In_Charge=#{person_In_Charge},
			build_Time=#{build_Time},
			run_Time=#{run_Time},
			user_Id=#{user_Id},
			create_Time=#{create_Time},
			zxbj=#{zxbj},
			remark=#{remark}
		
		where station_Id=#{station_Id}
    </update>
	<update id="deleteOneStation">
	    update Bicycle_station set zxbj='1' where station_Id=#{station_Id}
	    
	</update>
	
	<resultMap type="model.Bicycle_station" id="Bicycle_stationMap">
	    
	    <id column="station_Id" property="station_Id" />
	    <collection property="piles" ofType="model.Bicycle_pile" select="getPiles" column="station_Id"></collection>
	</resultMap>	
    <select id="getOneStation" parameterType="int" resultMap="Bicycle_stationMap">
        select * from Bicycle_station where station_Id=#{station_Id}
    </select>
    <select id="getPiles" resultType="model.Bicycle_pile">
        select * from Bicycle_pile where station_Id=#{station_Id}
        
    </select>
    
    <select id="getCount" resultType="int">
        select count(station_Id) from Bicycle_station
         <where>
           <if test="station.station_Code!=''"> and station_Code like '%'||#{station.station_Code}||'%'</if>
           <if test="station.station_Name!=''">and station_Name like '%'||#{station.station_Name}||'%'</if>
			<if test="station.address!=''">and address=#{station.address}</if>  
			<if test="station.zxbj!=''"> and zxbj=#{station.zxbj}</if>          
        </where>
        
        
    </select>
    
    <select id="getOnePage" resultType="model.Bicycle_station">
        
        	select * from 
				(select rownum r, 
			station_Id,
			station_Code,
			station_Name,
			longitude,
			latitude,
			bicycle_Pile_Num,
			address,
			person_In_Charge,
			build_Time,
			run_Time,
			user_Id,
			create_Time,
			zxbj,
			remark 
			from Bicycle_station
		  	where rownum&lt;=#{end}
           <if test="station.station_Code!=''"> and station_Code like '%'||#{station.station_Code}||'%'</if>
           <if test="station.station_Name!=''">and station_Name like '%'||#{station.station_Name}||'%'</if>
			<if test="station.address!=''">and address=#{station.address}</if>  
			<if test="station.zxbj!=''"> and zxbj=#{station.zxbj}</if>  
			
			)t where t.r &gt; #{start}        
       		
        
    
        
    </select>
    <insert id="addOnePile" >
        <selectKey keyProperty="pile_Id" resultType="int" order="BEFORE">
            select pile_SEQ.NEXTVAL from dual
        </selectKey>
        insert into Bicycle_pile values(
      	#{pile_Id},
      	#{vender_Id},
      	#{pile_Code},
      	#{station_Id},
      	#{status},
      	#{install_Time},
      	#{disassembly_Time},
      	#{user_Id},
      	#{operator_Time},
        #{bicycle_Id},
		#{remark}
        )
        
        
    </insert>
   <update id="deleteOnePile">
       update Bicycle_pile set status='9' where pile_Id=#{pile_Id}
       
   </update> 
   <update id="deletePiles">
        update Bicycle_pile set status='9' where station_Id=#{station_Id}
   </update>
	<select id="getOnePile" resultType="model.Bicycle_pile">
	    select * from Bicycle_pile where pile_Id=#{pile_Id} 
	</select>
	<update id="updateOnePile" >
	    update Bicycle_pile set 
	    	bicycle_Id=#{bicycle_Id},
	    	disassembly_Time=#{disassembly_Time},
	    	install_Time=#{install_Time},
	    	operator_Time=#{operator_Time},
	    	pile_Code=#{pile_Code},
	    	
	    	remark=#{remark},
	    	station_Id=#{station_Id},
	    	status=#{status},
	    	user_Id=#{user_Id},
	    	vender_Id=#{vender_Id}
	    	where pile_Id=#{pile_Id} 
	    
	</update>
	
	<resultMap type="model.Bicycle_info" id="BicycleMap">
	    <id column="bicycle_Id" property="bicycle_Id"/>
	    <association property="station_Name" column="pile_Id" select="getStationName"></association>
	    
	</resultMap>
	<select id="getStationName" resultType="String">
	    select station_Name from Bicycle_station station left join Bicycle_pile pile on station.station_Id=pile.station_Id  where pile_Id=#{pile_Id}
	</select>
    <select id="getOnePageBicycle" resultMap="BicycleMap">
        select * from 
				(select rownum r, t0.*
			from Bicycle_info t0
		  	where rownum&lt;=#{end}
           <if test="bicycle_info.bicycle_Code!=''"> and bicycle_Code like '%'||#{bicycle_info.bicycle_Code}||'%'</if>
           <if test="bicycle_info.operator_Time!=null and bicycle_info.operator_Time!=''">and operator_Time like '%'||#{bicycle_info.operator_Time}||'%'</if>
			<if test="bicycle_info.status!=''"> and status=#{bicycle_info.status}</if>  
			
			)t where t.r &gt; #{start}      
        
    </select>
    <select id="getBicycleCount" resultType="int">
        select count(bicycle_Id) from bicycle_info
        	<where>
        	    
           <if test="bicycle_info.bicycle_Code!=''"> and bicycle_Code like '%'||#{bicycle_info.bicycle_Code}||'%'</if>
           <if test="bicycle_info.operator_Time!=null and bicycle_info.operator_Time!=''">and operator_Time like '%'||#{bicycle_info.operator_Time}||'%'</if>
			<if test="bicycle_info.status!=''"> and status=#{bicycle_info.status}</if>  
			</where>
        
    </select>

    
    
</mapper>